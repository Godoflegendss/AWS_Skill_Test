name: CI/CD

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # 2. Python lint + test
      - name: Install Python deps
        run: pip install -r hello_world/requirements.txt pytest flake8
      - name: Run lint
        run: flake8 .
      - name: Run unit tests
        run: |
          export PYTHONPATH=$PYTHONPATH:./hello_world
          pytest hello_world/tests
      
      # 3. Terraform validate
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate

      # 4. Docker build & push to ECR
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build & Push
        working-directory: hello_world
        run: |
          IMAGE_TAG=latest
          docker build -t ${{ secrets.ECR_REPO }}:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REPO }}:$IMAGE_TAG

      # 5. Apply Terraform in non-prod
      - name: Terraform Apply (non-prod)
        run: terraform apply -auto-approve -var="env=nonprod"

      # 6. Deploy to EKS with Helm
      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name ${{ secrets.EKS_CLUSTER }}
      - name: Deploy with Helm
        run: |
          helm upgrade --install hello_world ./helm \
            --set image.repository=${{ secrets.ECR_REPO }} \
            --set image.tag=latest

      # 7. Logging
      - name: Verify Logs in CloudWatch
        run: |
          aws logs describe-log-groups --region ap-south-1
